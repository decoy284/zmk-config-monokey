#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W               &kp E                &kp R      &kp T                            &kp Y                   &kp U            &kp I     &kp O               &kp P
&mt LCTRL A       &kp S               &kp D                &kp F      &kp G                            &kp H                   &kp J            &kp K     &lt_to_layer_0 5 L  &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &kp X               &kp C                &kp V      &kp B                            &kp N                   &kp M            &mkp MB1  &mkp MB2            &mt RIGHT_SHIFT MINUS
&kp LCTRL         &mt LEFT_GUI COMMA  &mt LEFT_ALT PERIOD  &lt 1 TAB  &lt 2 SPACE  &lt 3 LANGUAGE_2    &lt_to_layer_0 3 LANG1  &lt 2 BACKSPACE                                &kp ESC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp CARET  &kp SLASH               &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN     &kp GREATER_THAN
&kp AT       &kp HASH    &kp ASTRK      &kp PLUS   &kp EQUAL               &kp MINUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp COLON
&kp GRAVE    &kp TILDE   &trans         &kp EXCL   &kp QUESTION            &kp PIPE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans       &trans      &trans         &trans     &trans        &trans    &trans         &trans                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp F1  &kp F2  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)            &kp COMMA   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH
&kp F4  &kp F5  &kp LC(NUMBER_4)  &kp LC(N5)        &kp LC(NUMBER_6)            &kp PERIOD  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
&kp F3  &kp F6  &kp LC(N7)        &kp LC(N8)        &kp LC(N9)                  &kp EQUAL   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&trans  &trans  &trans            &trans            &trans            &trans    &trans      &trans                                    &kp ASTRK
            >;
        };

        ARROW {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans            &kp LG(LS(S))  &kp LS(LC(TAB))     &kp UP_ARROW    &kp LC(TAB)          &trans
&trans        &trans        &trans        &trans        &trans            &kp LC(R)      &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &trans
&trans        &trans        &trans        &trans        &trans            &kp LC(T)      &kp LA(LEFT_ARROW)  &kp LC(R)       &kp LA(RIGHT_ARROW)  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans  &trans    &trans         &trans                                                   &bootloader
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans        &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans        &trans                  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2            &kp NUMBER_3  &trans        &trans        &bootloader   &trans
&trans  &trans  &trans  &bt BT_CLR    &trans        &trans    &trans        &trans                                    &trans
            >;
        };
    };
};
